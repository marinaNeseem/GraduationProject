const CategoryModel = require('../modules/CategoryModel');
const ItemModel = require('../modules/ItemModel');
const slugify = require('slugify');
const asyncHandler = require('express-async-handler');
const multer = require('multer');
const jwt = require('jsonwebtoken');
const mongoose = require('mongoose');




const storage = multer.diskStorage({
  destination: function (req, file, cb) {
      cb(null, 'uploadsCategories/'); // Save the uploaded files to the 'uploadsCategories' directory
  },
  filename: function (req, file, cb) {
      cb(null, file.fieldname + '-' + Date.now() + '.' + file.originalname.split('.').pop());
  }
});
const upload = multer({ storage: storage });



// get all items of specific category (by category id)


exports.getItemsByCategoryId = asyncHandler(async (req, res) => {
    try {
        const categoryId = req.params.categoryId;

        // Check if the provided category ID is valid
        if (!mongoose.Types.ObjectId.isValid(categoryId)) {
            return res.status(400).json({ error: 'Invalid category ID' });
        }

        // Check if the category exists
        const category = await CategoryModel.findById(categoryId);
        if (!category) {
            return res.status(404).json({ error: 'Category not found' });
        }

        // Find all items belonging to the specified category
        const items = await ItemModel.find({ category: categoryId });

        res.status(200).json({ success: true, data: items });
    } catch (error) {
        console.error(error);
        res.status(500).json({ success: false, message: 'Internal Server Error' });
    }
});
